{"version":3,"sources":["layout/NavItem.js","layout/NavDrawer.js","layout/AppBar.js","pages/AdvancedSearchPage.js","layout/UserItem.js","layout/UserList.js","pages/UserRegistrationPage.js","layout/MediaCard.js","layout/MediaCardGrid.js","pages/CardGridPage.js","layout/Content.js","App.js","serviceWorker.js","index.js"],"names":["NavItem","withRouter","props","react_default","a","createElement","Item","location","id","icon","label","link","onCloseNavDrawer","isActive","pathname","className","Link","onClick","to","NavDrawer","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","isVisible","visible","onClose","map","i","Component","AppBar","onOpenNavDrawer","AdvancedSearchPage","src","alt","UserItem","_this","handleDelete","bind","assertThisInitialized","onDeleteUser","lastName","firstName","username","email","type","UserList","apply","arguments","users","isLoading","error","getUsers","toString","u","UserItem_UserItem","userName","API_URL","process","UserRegistrationPage","state","postNewUser","handleChange","clearForm","_this2","fetch","method","headers","Headers","Content-Type","body","JSON","stringify","then","response","ok","json","Error","data","console","log","catch","err","_this3","_this4","setState","defineProperty","localStorage","clear","event","change","target","setItem","hasOwnProperty","getItem","parse","e","hydrateStateWithLocalStorage","deleteUser","htmlFor","onChange","placeholder","aria-describedby","UserList_UserList","MediaCard","image","title","description","MediaCardGrid","cards","c","CardGridPage","MediaCardGrid_MediaCardGrid","Content","Switch","Route","path","exact","component","render","UserRegistrationPage_UserRegistrationPage","screenWidth","App","navDrawerOpened","screenHeight","updateWindowDimensions","openNavDrawer","closeNavDrawer","window","addEventListener","removeEventListener","innerWidth","innerHeight","BrowserRouter","NavDrawer_NavDrawer","Content_Content","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acb527c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nexport const NavItem = withRouter(props =>\r\n    <Item location={props.location} id={props.id} icon={props.icon} label={props.label} link={props.link} onCloseNavDrawer={props.onCloseNavDrawer} />);\r\n\r\nfunction Item(props) {\r\n    let isActive = props.location.pathname === props.link ? \"active-link\" : \"\";\r\n\r\n    return (\r\n        <li className={ \"list-item \" + isActive }>\r\n            <i className=\"material-icons list-icon\">{ props.icon }</i>\r\n            <Link className=\"list-link\" onClick={ props.onCloseNavDrawer } to={ props.link }> { props.label } </Link>\r\n        </li>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { NavItem } from './NavItem';\r\n\r\nexport class NavDrawer extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let isVisible = this.props.visible ? \"nav-drawer-visible\" : \"\";\r\n        let onClose = this.props.onClose;\r\n\r\n        let itens = [\r\n            { id:1, icon:\"home\", label:\"Advanced Search\", link:\"/advancedsearch\" },\r\n            { id:2, icon:\"person\", label:\"User Registration\", link:\"/userregistration\" },\r\n            { id:3, icon:\"collections\", label:\"Card Grid\", link:\"/cardgrid\" }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"nav-drawer-wrapper\">\r\n                <div className={ \"scrim \" + isVisible } onClick={ onClose }></div>\r\n\r\n                <div className={ \"nav-drawer \" + isVisible }>\r\n                    <div className=\"nav-drawer-header\">\r\n                        <div className=\"app-title\">\r\n                            <span className=\"bold\">R</span>eact<br></br><span className=\"bold\">S</span>howcase\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"nav-drawer-body\">\r\n                        <ul className=\"list\">\r\n                            { itens.map(i =>\r\n                                <NavItem\r\n                                    key={ i.id }\r\n                                    id={ i.id }\r\n                                    icon={ i.icon }\r\n                                    label={ i.label }\r\n                                    link={ i.link }\r\n                                    onCloseNavDrawer={ onClose } />\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function AppBar(props) {\r\n    return(\r\n        <div className=\"app-bar regular-top-app-bar\">\r\n            <i className=\"material-icons\" onClick={props.onOpenNavDrawer}>menu</i>\r\n            <span className=\"app-bar-title\">React Showcase</span>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function AdvancedSearchPage(props) {\r\n    return (\r\n        <div className=\"content container-fluid\">\r\n            <div className=\"row justify-content-md-center mb-5 hero-section\">\r\n                <div className=\"col-xs-12 col-xl-8 text-center\">\r\n                    <h4>React Showcase</h4>\r\n                    <h6 className=\"mb-4\">A simple yet complete ReactJS application</h6>\r\n                    <p>This application provides a user registration screen with insertion and deletion of entries plus a screen with a grid of media cards. All the data is obtained by HTTP requests to a mocked REST API using the json-server library. The routing was made with the react-route library.</p>\r\n                    <img src=\"./img/devices-mockup.png\" className=\"img-fluid\" alt=\"Mockup image of the showcase application in multiple devices.\"></img>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row justify-content-md-center mb-4\">\r\n                <div className=\"col-xs-12 col-xl-8 mb-4\">\r\n                    <div className=\"card card-100-height\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"mb-2\">Components, Functionalities and Patterns</h5>\r\n                            <ul>\r\n                                <li>Responsive design using Bootstrap 4;</li>\r\n                                <li>Presents a navigation drawer and an app bar component;</li>\r\n                                <li>Use of the Fetch API to get and write data to a mocked REST API;</li>\r\n                                <li>Use of <code>react-router-dom</code> for routing;</li>\r\n                                <li>Stateful parents and stateless children;</li>\r\n                            </ul>                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xs-12 col-xl-8 mb-4\">\r\n                    <div className=\"card card-100-height\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"mb-2\">Installing and Running</h5>\r\n                            <ol>\r\n                                <li>Install (if you haven't already) JSON Server, a fake REST API tool, by running <code>> npm install -g json-server</code>;</li>\r\n                                <li>Install the project's dependencies by executing the <code>> npm install</code> command in the root directory;</li>\r\n                                <li>Enter the <code>/json-server</code> directory and start the mock REST API by running <code>> json-server db.json</code>;</li>\r\n                                <li>Back into the root directory of the project, run <code>> npm start</code>;</li>\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component }   from 'react';\r\n\r\nexport class UserItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleDelete(){\r\n        this.props.onDeleteUser(this.props.id);\r\n        //this.props.getUsers();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"row user-item\" key={this.props.id}>\r\n                <div className=\"col-12 col-md-3\">\r\n                    {this.props.lastName + \", \" + this.props.firstName}\r\n                </div>\r\n                <div className=\"col-12 col-md-2 text-left text-md-center\">\r\n                    {this.props.username}\r\n                </div>\r\n                <div className=\"col-12 col-md-5 text-left text-md-center\">\r\n                    {this.props.email}\r\n                </div>\r\n                <div className=\"col-12 col-md-2 text-left text-md-center\">\r\n                    <button type=\"submit\" className=\"btn btn-flat btn-default float-left\" onClick={ this.handleDelete }>DELETE</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { UserItem } from './UserItem';\r\n\r\nexport class UserList extends Component{\r\n    render() {\r\n        let users = this.props.users;\r\n        let isLoading = this.props.isLoading;\r\n        let error = this.props.error;\r\n\r\n        let onDeleteUser = this.props.onDeleteUser;\r\n        let getUsers = this.props.getUsers;\r\n\r\n        if(isLoading){\r\n            return <p>Loading...</p>\r\n        }\r\n\r\n        if(error){\r\n            return <p>{error.toString()}</p>\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {users.map(u =>\r\n                    <UserItem\r\n                        key={u.id}\r\n                        id={u.id}\r\n                        firstName={u.firstName}\r\n                        lastName={u.lastName}\r\n                        username={u.userName}\r\n                        email={u.email} \r\n                        onDeleteUser={ onDeleteUser }\r\n                        getUsers = { getUsers } />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component }   from 'react';\r\nimport { UserList } from '../layout/UserList';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\nconst DEFAULT_QUERY = 'users';\r\nconst SORT_QUERY = '?_sort=id&_order=desc';\r\n\r\nexport class UserRegistrationPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            lastName: '',\r\n            firstName: '',\r\n            userName: '',\r\n            email: '',\r\n            users: [],\r\n            isLoading: false,\r\n            error: null\r\n        };\r\n\r\n        this.getUsers = this.getUsers.bind(this);\r\n        this.postNewUser = this.postNewUser.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.clearForm = this.clearForm.bind(this);\r\n    }\r\n\r\n    postNewUser(){\r\n        const lastName = this.state.lastName;\r\n        const firstName = this.state.firstName;\r\n        const userName = this.state.userName;\r\n        const email = this.state.email;\r\n\r\n        fetch(API_URL + DEFAULT_QUERY,\r\n            {\r\n                method: 'POST',\r\n                headers: new Headers({'Content-Type': 'application/json'}),\r\n                body: JSON.stringify({firstName:firstName, lastName:lastName, userName:userName, email:email})\r\n            }\r\n        ).then(response => {\r\n            if(response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Something went wrong...')\r\n            }\r\n        }).then((data) => {\r\n            console.log('Insertion of ' + JSON.stringify(data));\r\n            this.clearForm();\r\n            this.getUsers();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    deleteUser(id){\r\n        fetch(API_URL + DEFAULT_QUERY + '/' + id,\r\n            {\r\n                method: 'DELETE',\r\n            }\r\n        ).then(response => {\r\n            if(response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Something went wrong...')\r\n            }\r\n        }).then(() => {\r\n            console.log('Deletion successful!');\r\n            this.getUsers();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    getUsers() {\r\n        this.setState({ isLoading: true });\r\n\r\n        fetch(API_URL + DEFAULT_QUERY + SORT_QUERY)\r\n            .then(response => {\r\n                if(response.ok) {\r\n                    return response.json()\r\n                } else {\r\n                    throw new Error('Something went wrong...')\r\n                }\r\n            })\r\n            .then(data => this.setState({ users: data, isLoading: false}))\r\n            .catch(error => this.setState({ error, isLoading: false }));\r\n    }\r\n\r\n    clearForm(){\r\n        this.setState({ [\"lastName\"]: '' });\r\n        this.setState({ [\"firstName\"]: '' });\r\n        this.setState({ [\"userName\"]: '' });\r\n        this.setState({ [\"email\"]: '' });\r\n\r\n        localStorage.clear();\r\n    }\r\n\r\n    handleChange(event){\r\n        let change = {};\r\n        change[event.target.id] = event.target.value;\r\n        this.setState(change);\r\n\r\n        // update localStorage\r\n        localStorage.setItem(event.target.id, event.target.value);\r\n    }\r\n\r\n    hydrateStateWithLocalStorage() {\r\n        // for all items in state\r\n        for (let key in this.state) {\r\n            // if the key exists in localStorage\r\n            if (localStorage.hasOwnProperty(key)) {\r\n                // get the key's value from localStorage\r\n                let value = localStorage.getItem(key);\r\n\r\n                // parse the localStorage string and setState\r\n                try {\r\n                    value = JSON.parse(value);\r\n                    this.setState({ [key]: value });\r\n                } catch (e) {\r\n                    // handle empty string\r\n                    this.setState({ [key]: value });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUsers();\r\n        this.hydrateStateWithLocalStorage();\r\n    }\r\n\r\n    render(){\r\n        const users = this.state.users;\r\n        const isLoading = this.state.isLoading;\r\n        const error = this.state.error;\r\n\r\n        const handleChange = this.handleChange;\r\n        const deleteUser = this.deleteUser;\r\n        const getUsers = this.getUsers;\r\n\r\n        const lastName = this.state.lastName;\r\n        const firstName = this.state.firstName;\r\n        const userName = this.state.userName;\r\n        const email = this.state.email;\r\n\r\n        return (\r\n            <div className=\"content container-fluid\">\r\n                <div className=\"row mb-4\">\r\n                    <div className=\"col-sm\">\r\n                        <h5>User Registration</h5>\r\n                        <p>This page shows an example of a simple user registration and listing.</p>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"card mb-4\">\r\n                    <div className=\"card-header\"><h6>USER REGISTRATION</h6></div>\r\n    \r\n                    <div className=\"card-body\">     \r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"lastName\">Last Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"lastName\"\r\n                                        value={lastName}\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Enter your last name\" />\r\n                                </div>       \r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">First Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"firstName\"\r\n                                        value={firstName}\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Enter your first name\" />\r\n                                </div>       \r\n                            </div>\r\n\r\n                            <div className=\"col-12  col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"userName\">User Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"userName\"\r\n                                        value={userName}\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Enter your user name\" />\r\n                                </div>       \r\n                            </div>\r\n \r\n                            <div className=\"col-12  col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email address</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        className=\"form-control\"\r\n                                        id=\"email\"\r\n                                        value={email}\r\n                                        onChange={handleChange}\r\n                                        aria-describedby=\"emailHelp\"\r\n                                        placeholder=\"Enter email\" />\r\n                                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-flat btn-default float-left\" onClick={this.clearForm}>CLEAR</button>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary float-right\" onClick={this.postNewUser}>REGISTER</button>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"card mb-4\">\r\n                    <div className=\"card-header\"><h6>LIST OF USERS</h6></div>\r\n    \r\n                    <div className=\"card-body\">\r\n                        <UserList\r\n                            users={ users }\r\n                            isLoading={ isLoading }\r\n                            error={ error } \r\n                            onDeleteUser={ deleteUser } \r\n                            getUsers={ getUsers } />\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function MediaCard(props) {\r\n    return (\r\n        <div key={props.id} className=\"col-xs-12 col-sm-6 col-lg-4 col-xl-3 mb-4\">\r\n            <div className=\"card card-100-height\">\r\n                <div className=\"card-rich-media\">\r\n                    <img src={props.image} />\r\n                </div>\r\n\r\n                <div className=\"card-primary-title\">\r\n                    <h6>{props.title}</h6>\r\n                    <span className=\"secondary-text\">Lorem ipsum et dolorem</span>\r\n                </div>\r\n\r\n                <div className=\"card-supporting-text\">\r\n                    <p>{props.description}</p>\r\n                </div>\r\n\r\n                <div className=\"card-actions\">\r\n                    <a className=\"btn btn-flat btn-primary\">ACTION 1</a>\r\n                    <a className=\"btn btn-flat btn-primary\">ACTION 2</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component }  from 'react';\r\nimport { MediaCard } from './MediaCard';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\nconst DEFAULT_QUERY = 'cards';\r\n\r\nexport class MediaCardGrid extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            cards: [],\r\n            isLoading: false,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n\r\n        fetch(API_URL + DEFAULT_QUERY)\r\n            .then(response => {\r\n                if(response.ok) {\r\n                    return response.json()\r\n                } else {\r\n                    throw new Error('Something went wrong...')\r\n                }\r\n            })\r\n            .then(data => this.setState({ cards: data, isLoading: false}))\r\n            .catch(error => this.setState({ error, isLoading: false }));\r\n    }\r\n\r\n    render() {\r\n        const cards = this.state.cards;\r\n        const isLoading = this.state.isLoading;\r\n        const error = this.state.error;\r\n\r\n        if(isLoading){\r\n            return <p>Loading...</p>\r\n        }\r\n\r\n        if(error){\r\n            return <p>{error.toString()}</p>\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                {cards.map(c =>\r\n                    <MediaCard\r\n                        key={c.id}\r\n                        image={c.image}\r\n                        title={c.title}\r\n                        description={c.description} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { MediaCardGrid } from '../layout/MediaCardGrid';\r\n\r\nexport function CardGridPage(props) {\r\n    return (\r\n        <div className=\"content container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <h5>Card Grid</h5>\r\n                    <p>This page shows a simple example of how to display a list of components using the map() array function.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <MediaCardGrid />\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport { AdvancedSearchPage } from '../pages/AdvancedSearchPage';\r\nimport { UserRegistrationPage } from '../pages/UserRegistrationPage';\r\nimport { CardGridPage } from '../pages/CardGridPage';\r\n\r\nexport class Content extends Component {\r\n    render(){\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact={true} component={AdvancedSearchPage}/>\r\n                <Route path=\"/advancedsearch\" exact={true} component={AdvancedSearchPage}/>\r\n                <Route\r\n                    path=\"/userregistration\"\r\n                    render={(props) => <UserRegistrationPage screenWidth={this.props.screenWidth}/>} \r\n                />\r\n                <Route path=\"/cardgrid\" component={CardGridPage}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './App.scss';\r\n\r\nimport { NavDrawer } from './layout/NavDrawer';\r\nimport { AppBar } from './layout/AppBar';\r\nimport { Content } from './layout/Content';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      navDrawerOpened: false,\r\n      screenWidth: 0,\r\n      screenHeight: 0\r\n    }\r\n\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    this.openNavDrawer = this.openNavDrawer.bind(this);\r\n    this.closeNavDrawer = this.closeNavDrawer.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  updateWindowDimensions() {\r\n    this.setState({ screenWidth: window.innerWidth, screenHeight: window.innerHeight });\r\n  }\r\n\r\n  openNavDrawer(){\r\n    this.setState({\r\n      navDrawerOpened: true\r\n    });\r\n  }\r\n\r\n  closeNavDrawer(){\r\n    this.setState({\r\n      navDrawerOpened: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let navDrawerOpened = this.state.navDrawerOpened;\r\n    let screenWidth = this.state.screenWidth;\r\n    let closeNavDrawer = this.closeNavDrawer;\r\n    let openNavDrawer = this.openNavDrawer;\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n            <NavDrawer\r\n              visible={navDrawerOpened}\r\n              onClose={closeNavDrawer}\r\n            />\r\n\r\n            <div className=\"wrapper\">              \r\n              <AppBar screenWidth={screenWidth} onOpenNavDrawer={openNavDrawer}/>\r\n              <Content screenWidth={screenWidth}/>\r\n            </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}